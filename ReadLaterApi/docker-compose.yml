version: '3.8' # Specify Compose file version

services:
  # --- ReadLater API ---
  readlater_api:
    build:
      context: . # Dockerfile is in the current directory (where docker-compose.yml is)
      dockerfile: Dockerfile # Explicitly state the Dockerfile name
    container_name: readlater_api_app
    restart: always
    environment:
      # This is crucial for your API to connect to PostgreSQL
      # The name "DefaultConnection" should match what your app expects in appsettings.json or code
      - ConnectionStrings__DefaultConnection=Host=postgres_db;Port=5432;Database=articledb;Username=user;Password=password
      - ASPNETCORE_ENVIRONMENT=Development # Ensures appsettings.Development.json is used if present
      - ASPNETCORE_URLS=http://+:8080 # Tell Kestrel to listen on port 8080 on all network interfaces
    depends_on:
      - postgres_db # API depends on the database
    networks:
      - app_network
    # No ports exposed to the host - Nginx will handle external access

  # --- PostgreSQL Database ---
  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password # !! USE SECRETS OR ENV VARS IN PRODUCTION !!
      POSTGRES_DB: articledb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    ports:
      - "5432:5432" # Expose for direct DB access during dev, if needed. Can be removed if only app/pgadmin access it.

  # --- PgAdmin Web UI ---
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_gui
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword # !! USE SECRETS OR ENV VARS IN PRODUCTION !!
      PGADMIN_LISTEN_PORT: 80
      SCRIPT_NAME: /pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres_db
    networks:
      - app_network
    # No ports exposed to the host - access via nginx

  # --- Nginx Reverse Proxy ---
  nginx:
    image: nginx:stable-alpine
    container_name: reverse_proxy
    restart: always
    ports:
      - "80:80" # Nginx listens on port 80 of the host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - pgadmin
      - readlater_api # Nginx also depends on your API
    networks:
      - app_network

# --- Named Volumes Definition ---
volumes:
  postgres_data:
  pgadmin_data:

# --- Custom Network Definition ---
networks:
  app_network:
    driver: bridge