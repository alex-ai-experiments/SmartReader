version: '3.8' # Specify Compose file version

services:
  # --- PostgreSQL Database ---
  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: user       # Replace with your desired DB user
      POSTGRES_PASSWORD: password # !! USE SECRETS OR ENV VARS IN PRODUCTION !!
      POSTGRES_DB: articledb    # Name of the database to create initially
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data using a named volume
    networks:
      - app_network # Connect to the custom network
    ports:
      - "5432:5432"

  # --- PgAdmin Web UI ---
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_gui
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com  # Login email for PgAdmin
      PGADMIN_DEFAULT_PASSWORD: adminpassword    # !! USE SECRETS OR ENV VARS IN PRODUCTION !!
      PGADMIN_LISTEN_PORT: 80                  # PgAdmin internal port (default is 80)
      # Important for running behind reverse proxy in subdirectory:
      SCRIPT_NAME: /pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin # Persist pgAdmin data (servers, settings)
    depends_on:
      - postgres_db # Wait for db to be ready (basic check)
    networks:
      - app_network # Connect to the custom network
    # No ports exposed to the host - access via nginx

  # --- Nginx Reverse Proxy ---
  nginx:
    image: nginx:stable-alpine # Use a lightweight nginx image
    container_name: reverse_proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Mount custom config (read-only)
    depends_on:
      - pgadmin # Nginx needs pgadmin to proxy requests to it
    networks:
      - app_network # Connect to the custom network

# --- Named Volumes Definition ---
volumes:
  postgres_data: # Stores PostgreSQL data
  pgadmin_data:  # Stores PgAdmin configuration/data

# --- Custom Network Definition ---
networks:
  app_network:
    driver: bridge # Default Docker network driver